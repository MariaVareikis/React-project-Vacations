.VacationCardForUser>.Container {
    width: 370px;
    height: 430px;
    margin-top: 10px;
    margin-left: auto;
    --border-radius: 15px;
    --border-width: 4px;
    appearance: none;
    position: relative;
    padding: 1em 2em;
    border: 0;
    background: rgb(5, 5, 22);
    font-size: 18px;
    font-weight: 500;
    color: #fff;
    z-index: 2;
    border-radius: 15px;
}

.VacationCardForUser>.Container::after {
    --m-i: linear-gradient(#000, #000);
    --m-o: content-box, padding-box;
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    padding: var(--border-width);
    border-radius: var(--border-radius);
    background-image: conic-gradient(#488cfb,
            #29dbbc,
            #ddf505,
            #ff9f0e,
            #e440bb,
            #655adc,
            #488cfb);
    -webkit-mask-image: var(--m-i), var(--m-i);
    mask-image: var(--m-i), var(--m-i);
    -webkit-mask-origin: var(--m-o);
    mask-origin: var(--m-o);
    -webkit-mask-clip: var(--m-o);
    mask-composite: exclude;
    -webkit-mask-composite: destination-out;
    filter: hue-rotate(0);
    animation: rotate-hue linear 500ms infinite;
    animation-play-state: paused;
}

.VacationCardForUser>.Container:hover::after {
    animation-play-state: running;
}

@keyframes rotate-hue {
    to {
        filter: hue-rotate(1turn);
    }
}

.VacationCardForUser>.Container,
.VacationCardForUser>.Container::after {
    box-sizing: border-box;
}

.VacationCardForUser>.Container:active {
    --border-width: 5px;
}

.VacationCardForUser>.Container>img {
    width: 350px;
    height: 180px;
    margin-top: 0px;
    margin-left: -26px;
    border-radius: 10px;
}

/* Button */
.VacationCardForUser>.Container>.Description {
    --glow-color: rgb(217, 176, 255);
    --glow-spread-color: rgba(191, 123, 255, 0.781);
    --enhanced-glow-color: rgb(231, 206, 255);
    --btn-color: rgb(100, 61, 136);
    border: .25em solid var(--glow-color);
    padding: 1em 3em;
    color: black;
    font-size: 15px;
    font-weight: bolder;
    background-color: var(--btn-color);
    border-radius: 1em;
    outline: none;
    box-shadow: 0 0 1em .25em var(--glow-color),
        0 0 4em 1em var(--glow-spread-color),
        inset 0 0 .75em .25em var(--glow-color);
    text-shadow: 0 0 .5em var(--glow-color);
    position: relative;
    transition: all 0.3s;
    z-index: 4;
    margin-top: 5px;
}

.Description::after {
    pointer-events: none;
    content: "";
    position: absolute;
    top: 120%;
    left: 0;
    height: 100%;
    width: 100%;
    background-color: var(--glow-spread-color);
    filter: blur(2em);
    opacity: .7;
    transform: perspective(1.5em) rotateX(35deg) scale(1, .6);
}

.Description:hover {
    color: var(--btn-color);
    background-color: var(--glow-color);
    box-shadow: 0 0 1em .25em var(--glow-color),
        0 0 4em 2em var(--glow-spread-color),
        inset 0 0 .75em .25em var(--glow-color);
}

.Description:active {
    box-shadow: 0 0 0.6em .25em var(--glow-color),
        0 0 2.5em 2em var(--glow-spread-color),
        inset 0 0 .5em .25em var(--glow-color);
}

/* Hide the default checkbox */
.ContainerBox>input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
    border-radius: 5px;
}

.ContainerBox {
    margin-top: 5px;
    margin-left: 280px;
    display: inline-block;
    position: relative;
    cursor: pointer;
    font-size: 20px;
    user-select: none;
    border-radius: 5px;
    box-shadow: 2px 2px 0px rgb(183, 183, 183);
}

/* Create a custom checkbox */
.Checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 1.3em;
    width: 1.3em;
    background-color: #ccc;
    border-radius: 5px;
    z-index: 4;
}

/* When the checkbox is checked, add a blue background */
.ContainerBox>input:checked~.Checkmark {
    box-shadow: 3px 3px 0px rgb(183, 183, 183);
    transition: all 0.2s;
    opacity: 1;
    background-image: linear-gradient(45deg, rgb(100, 61, 219) 0%, rgb(217, 21, 239) 100%);
}

.ContainerBox>input~.Checkmark {
    transition: all 0.2s;
    opacity: 1;
    box-shadow: 1px 1px 0px rgb(183, 183, 183);
}

/* Create the checkmark/indicator (hidden when not checked) */
.Checkmark:after {
    content: "";
    position: absolute;
    opacity: 0;
    transition: all 0.2s;
}

/* Show the checkmark when checked */
.ContainerBox>input:checked~.Checkmark:after {
    opacity: 1;
    transition: all 0.2s;
}

/* Style the checkmark/indicator */
.ContainerBox>.Checkmark:after {
    left: 0.45em;
    top: 0.25em;
    width: 0.25em;
    height: 0.5em;
    border: solid white;
    border-width: 0 0.15em 0.15em 0;
    transform: rotate(45deg);
}

.VacationCardForUser>.Container>span {
    position: relative;
    margin-top: 5px;
    margin-left: 250px;
}

.VacationCardForUser>.Container>p {
    margin-top: -10px;
}